# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*.tfplan*
*.swp
.terraform.lock.hcl
*.auto.tfvars

# Keep copy pasta from becoming terraform destroy dessert. I've been burned by
# this multiple times. When copying a directory of terraform and forgetting to
# touch this file up it destroys the infra it was copied from instead of
# creating new state.
backend.tf

/ansible/collections
/ansible/roles
/ansible/.ansible/**
/ansible/*.inventory
.DS_Store
